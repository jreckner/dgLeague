server:
  port: ${port:1976}

info:
  app:
    displayName: Disc Golf League Service
    name: ${name}
    description: ${description}
    version: ${version}
    buildDate: ${buildDate}
    commitsh: ${commitsh}
    platform: spring-boot-groovy

# Logging Configuration
logging.file: dgleague.log
logging.level.: INFO
logging:
  level:
    # org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainer: INFO
    # groovyx.net.http.RESTClient: DEBUG
    com.wireblend.yttp: INFO

# Database Configuration
spring:
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://recknerd.com:5432/dgleague
    username: dgleague
    password: dgleague

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        hbm2ddl:
          auto: create-drop
          import_files: import.sql

# Swagger Configuration
swagger.enabled: true
swagger.version: 1.0
swagger.title: Disc Golf League API
swagger.description: A service to help organize and run a Disc Golf League.
swagger.termsOfServiceUrl: http://recknerd.com
swagger.contact: jon.reckner@gmail.com
swagger.license: MIT License
swagger.licenseUrl: https://tldrlegal.com/license/mit-license

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

spring.application.name: dgleague-service

# Spring Profiles
# spring.profiles.active: prod

# SPRING CONFIG (ConfigFileApplicationListener)
#spring.config.name:                                 # config file name (default to 'application')
#spring.config.location:                             # location of config file

# APPLICATION SETTINGS (SpringApplication)
spring.main.show-banner: true
banner.location: classpath:/banner.txt

# JMX
spring.jmx.enabled: false                   # Expose MBeans from Spring

# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.port:                           # defaults to 'server.port'
#management.address:                        # bind to a specific NIC
#management.context-path:                   # default to '/'
#management.add-application-context-header: # default to true
#management.security.enabled=false

# PID FILE (ApplicationPidFileWriter)
spring.pidfile: pid/sentry-microservice.pid # Location of the PID file to write

# SECURITY (SecurityProperties)
# security.user.name: lxk                     # login username
# security.user.password: test                # login password
# security.basic.enabled: true
# security.basic.realm: Spring
# security.require-ssl: false

# ENDPOINTS (AbstractEndpoint subclasses)
# Disable all endpoints and then `opt-in`
endpoints.enabled: false
# Enabled Endpoints
endpoints.health.id: health                 # To match CloudOS and LPM SaaS
endpoints.health.sensitive: false           # sensitive requires user/pass basic access
endpoints.health.enabled: true
endpoints.info.id: info
endpoints.info.sensitive: false
endpoints.info.enabled: true

# HEALTH INDICATORS (previously health.*)
#management.health.db.enabled=true
#management.health.diskspace.enabled=true
#management.health.mongo.enabled=true
#management.health.rabbit.enabled=true
#management.health.redis.enabled=true
#management.health.solr.enabled=true
#management.health.diskspace.path=.
#management.health.diskspace.threshold=10485760
#management.health.status.order=DOWN, OUT_OF_SERVICE, UNKNOWN, UP
